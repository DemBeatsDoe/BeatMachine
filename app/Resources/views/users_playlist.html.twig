{% extends 'page.html.twig' %}

{% block title %}Beat Machine - {{ playlistName }}{% endblock %}

{% block stylesheets %}
    <style>
        body {
            background: #eeeeee;
        }

        .playlistHeader {
            height: 130px;
            position: relative;
            margin-bottom: 20px;
        }

        .playlistArt {
            height: 100%;
            position: relative;
            float: left;
        }

        .playlistTitle {
            position: relative;
            left: 10px;

            font-family: 'Lato', sans-serif;
            font-size: 20pt;
            font-weight: 900;
            color: #2f364a;
        }

        .playlistAuthor {
            position: relative;
            left: 10px;
            margin-top: 2px;

            font-family: 'Lato', sans-serif;
            font-size: 13pt;
            color: #8f8f92;
        }

        .playlistAuthor a {
            font-family: 'Lato', sans-serif;
            font-size: 13pt;
            color: #8f8f92;

            outline: none;
            text-decoration: none;
        }

        .songsTable {
            width: 100%;
            font-family: 'Lato', sans-serif;
            color: #57575a;
            border-collapse: collapse;
            margin-bottom: 10px;
        }

        .songsTable tr {
            border-bottom: 1px solid black;
            border-color: #b4b4b7;
        }

        .songsTable th {
            text-align: left;
            padding-bottom: 6px;
        }

        .songsTable td {
            padding-top: 9px;
            padding-bottom: 9px;
            cursor: pointer;
            cursor: hand;
        }

        .songsTable tbody tr:hover {
            background-color: #eeeeee;
        }

        .songsTable .playing {
            font-weight: bold;
            color: #2f364a;
        }

        #editbutton {
            display: inline-block;
            margin: 12px;
        }

    </style>
{% endblock %}

{% block javascripts %}
    <script type="text/javascript">
        var lastClicked = false;

        //Set this pages playlist
        playBar.emptyPlaylist();
        {% for song in songs %}
        playBar.addSongToPlaylist('{{ song.name }}', '{{ song.musicLink }}');
        {% endfor %}

        //Lest listener for song change
        document.addEventListener("newSongLoaded", function () {
            setActiveSong($('#' + playBar.getCurrentTrackIndex()));
        });

        function setActiveSong(clickedElement) {
            if (lastClicked != false) {
                lastClicked.removeClass();
            }
            clickedElement.removeClass().addClass('playing');
            lastClicked = clickedElement;
        }

        function changeTitle(playlistid, title) {
            xxhttp = new XMLHttpRequest();
            xxhttp.open("POST", "/playlist/changetitle", true);
            xxhttp.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
            xxhttp.send('playlistID=' + playlistid + '&name=' + title);
        }

        function changeSongName(playlistid, songid, name) {
            xxhttp = new XMLHttpRequest();
            xxhttp.open("POST", "/playlist/changesongname", true);
            xxhttp.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
            xxhttp.send('playlistID=' + playlistid + '&songID=' + songid + '&name=' + name);
        }

        function changeSongArtist(playlistid, songid, name) {
            xxhttp = new XMLHttpRequest();
            xxhttp.open("POST", "/playlist/changesongartist", true);
            xxhttp.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
            xxhttp.send('playlistID=' + playlistid + '&songID=' + songid + '&name=' + name);
        }

        /* EXAMPLE RESPONSE FROM SOUNDCLOUD
         {
         "version": 1.0,
         "type": "rich",
         "provider_name": "SoundCloud",
         "provider_url": "http://soundcloud.com",
         "height": 400,
         "width": "100%",
         "title": "1.5- XO TOUR Llif3 (Produced By TM88) by LIL UZI VERT",
         "description": "LUV IS RAGE 2 COMING SOON",
         "thumbnail_url": "http://i1.sndcdn.com/artworks-000209741436-qfq484-t500x500.jpg",
         "html": "\u003Ciframe width=\"100%\" height=\"400\" scrolling=\"no\" frameborder=\"no\" src=\"https://w.soundcloud.com/player/?visual=true\u0026url=https%3A%2F%2Fapi.soundcloud.com%2Ftracks%2F309689093\u0026show_artwork=true\"\u003E\u003C/iframe\u003E",
         "author_name": "LIL UZI VERT",
         "author_url": "https://soundcloud.com/liluzivert"
         }
         */

        function addSong(url) {
            var xhttp = new XMLHttpRequest();
            xhttp.open("GET", "https://soundcloud.com/oembed?format=json&url="+url, true);
            xhttp.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
            xhttp.send();

            //Process the returned data
            xhttp.onreadystatechange = function () {
                if (xhttp.readyState == 4 && xhttp.status == 200) {
                    var playlistResponse = JSON.parse(xhttp.responseText);
                    var processedURL = playlistResponse.html.substr(playlistResponse.html.indexOf('tracks%2F')+9, 9); //ID is 9 long
                    var xxhttp = new XMLHttpRequest();
                    xxhttp.open("POST", "/playlist/addSong", true);
                    xxhttp.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
                    xxhttp.send('playlistID={{ playlistID }}'+'&title=' + playlistResponse.title + '&artist=' + playlistResponse.author_name + '&url=' + processedURL + '&art=' + playlistResponse.thumbnail_url + '&length=3:' + Math.floor(Math.random()*50 + 10));
                    xxhttp.onreadystatechange = function () {
                        if (xxhttp.readyState == 4 && xxhttp.status == 200) {
                            var r = JSON.parse(xxhttp.responseText);
                            if (r.success) {
                                //Succeeded
                                //appendSong(r.id, r.title, r.artist, r.length);
                                location.reload();
                            } else {
                                document.getElementById('songURL').value = "";
                                document.getElementById('songURL').placeholder = r.error;
                            }
                        }
                    }
                } else {
                    //Failed to parse link
                    document.getElementById('songURL').value = "";
                    document.getElementById('songURL').placeholder = "Couldn't parse link";
                }
            }
        }

        $('#addSongButton').click(function() {
            addSong($('#songURL').val());
        });

        $('#songURL').keypress(function (e) {
            if (e.which == 13) {
                //Disable textbox to prevent multiple submit
                //$(this).attr("disabled", "disabled");

                addSong($('#songURL').val());
                return false;
            }
        });

        $(document).ready(function () {
            $(".blur").css("width", $(".clickMe").width());
            $(".blur").css("height", $(".clickMe").height());
        });

        $('#deleteButton').click(function () {
            var xxhttp = new XMLHttpRequest();
            xxhttp.open("POST", "/playlist/delete", true);
            xxhttp.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
            xxhttp.send('playlistID=' + {{ playlistID }});
            window.location.replace("/");
        });

        $('.clickMe').click(function () {
            "use strict";
            $(this).hide();
            $('#' + $(this).attr('for'))
                .val($(this).text())
                .toggleClass("form-control")
                .show()
                .focus();
        });

        $('.blur').blur(function () {
            "use strict";
            $(this)
                .hide()
                .toggleClass("form-control");
            var myid = (this).id;
            $('span[for=' + myid + ']')
                .text($(this).val())
                .show();
            //Update db
            if ($(this).hasClass("playlistTitle")) {
                changeTitle({{ playlistID }}, $(this).val())
            } else if ($(this).hasClass("songName")) {
                changeSongName({{ playlistID }}, myid[myid.length - 1], $(this).val())  //TODO: This will only work for index 0-9 :(
            } else if ($(this).hasClass("songArtist")) {
                changeSongArtist({{ playlistID }}, myid[myid.length - 1], $(this).val())
            }
        });

        function deleteSong(id, element) {
            var xxhttp = new XMLHttpRequest();
            xxhttp.open("POST", "/playlist/removeSong", true);
            xxhttp.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
            xxhttp.send('playlistID=' + {{ playlistID }} + '&songID=' + id);
            //Process the returned data
            xxhttp.onreadystatechange = function () {
                if (xxhttp.readyState == 4 && xxhttp.status == 200) {
                    var response = JSON.parse(xxhttp.responseText);
                    if (response.success) {
                        element.parentNode.parentNode.parentNode.removeChild(element.parentNode.parentNode);
                    }
                }
            }
        }

        function getShareLink() {
            var xxhttp = new XMLHttpRequest();
            xxhttp.open("POST", "/share/getLink", true);
            xxhttp.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
            xxhttp.send('playlistID=' + {{ playlistID }});

            //Process the returned data
            xxhttp.onreadystatechange = function () {
                if (xxhttp.readyState == 4 && xxhttp.status == 200) {
                    var response = JSON.parse(xxhttp.responseText);
                    if (response.success) {
                        copyToClipboard(response.link);
                    }
                }
            }
        }

        function copyToClipboard(text) {
            alert("Copied to clipboard: " + text);
        }
    </script>
{% endblock %}

{% block pagebody %}
    <div class="playlistHeader">
        <img class="playlistArt" src="{{ playlistArt }}">


        <span class="collaboratorIcons pull-right">
            {#                <a href="/playlist/edit/collaborators?id={{ playlistID }}">#}
            <h4 class="glyphicon glyphicon-edit">Collaborators</h4>
            <ul style="list-style-type: none; text-align: right;">
                {% for c in collaborators %}
                    <li><a href="/profile?id={{ c.id }}">{{ c.username }}</a></li>
                {% endfor %}
            </ul>
        </span>

        {% if is_granted("IS_AUTHENTICATED_REMEMBERED") and app.user.id == authorID  and editable %}
            <h3><span class="label label-info clickMe playlistTitle" for="textBox1">{{ playlistName }}</span></h3>
            <input value="" type="text" id="textBox1" name="textBox1" class="blur playlistTitle" hidden>
        {% else %}
            <div class="playlistTitle">{{ playlistName }}</div>

        {% endif %}

        <div class="playlistAuthor"><a href="/profile?id={{ authorID }}">Created by {{ playlistAuthor }}</a></div>

        {% if is_granted("IS_AUTHENTICATED_REMEMBERED") and app.user.id == authorID %}


            {% if editable %}
                <span id="editbutton">
                    <a href="/playlist?id={{ playlistID }}">
                        <button type="button" class="btn btn-default btn-md">
                            <span class="glyphicon glyphicon-ok" aria-hidden="true"></span> Done
                        </button>
                    </a>

                </span>
            {% else %}
                <span id="editbutton">
                    <a href="/playlist/edit?id={{ playlistID }}">
                        <button type="button" class="btn btn-default btn-md">
                            <span class="glyphicon glyphicon-edit" aria-hidden="true"></span> Edit
                        </button>
                    </a>
                </span>
            {% endif %}

        {% endif %}
        <span id="linkButton">
                <button onclick="getShareLink();" type="button" class="btn btn-default btn-warning btn-md glyphicon glyphicon-link"></button>
            </span>
    </div>

    <table class="songsTable">

        <thead>
        <tr>
            <th>Length</th>
            <th>Song Name</th>
            <th>Artist</th>
        </tr>
        </thead>

        <tbody>
        {% for song in songs %}
            {% set a = loop.index0 %}
            <div>
                <tr id="{{ a }}" onclick="playBar.playSongAt({{ a }});">
                    <td>{{ song.length }}</td>
                    <td>
                        {% if is_granted("IS_AUTHENTICATED_REMEMBERED") and app.user.id == authorID and editable %}
                            <span class="clickMe label label-info songName"
                                  for="songNameTextbox{{ a }}">{{ song.name }}</span>
                            <input value="" type="text" id="songNameTextbox{{ a }}" name="songNameTextbox{{ a }}"
                                   class="blur songName" hidden>
                        {% else %}
                            {{ song.name }}
                        {% endif %}
                    </td>
                    <td>
                        {% if is_granted("IS_AUTHENTICATED_REMEMBERED") and app.user.id == authorID and editable %}
                            <span class="clickMe label label-info songArtist"
                                  for="songArtistTextbox{{ a }}">{{ song.artist }}</span>
                            <input value="" type="text" id="songArtistTextbox{{ a }}" name="songArtistTextbox{{ a }}"
                                   class="blur songArtist" hidden>
                        {% else %}
                            {{ song.artist }}
                        {% endif %}

                    </td>
                    {% if is_granted("IS_AUTHENTICATED_REMEMBERED") and app.user.id == authorID and editable %}
                        <td>
                            <button class="btn btn-circle btn-danger glyphicon glyphicon-remove-circle" onclick="deleteSong({{ song.id }}, this);"></button>
                        </td>
                    {% endif %}
                </tr>
            </div>
        {% endfor %}

        </tbody>

    </table>

    {% if is_granted("IS_AUTHENTICATED_REMEMBERED") and app.user.id == authorID %}

        <div style="margin-bottom: 10px;" class="input-group">
            <span class="input-group-addon"><i class="glyphicon glyphicon-link"></i></span>
            <div shorterbox style='display:block; float:left; width:90%; margin-right:8px;'>
                <input id="songURL" type="url" class="form-control" name="songURL" placeholder="URL of song">
            </div>
            <button id="addSongButton" type="button" class="btn btn-info btn-circle"><i class="glyphicon glyphicon-plus"></i></button>
        </div>
    {% endif %}


    {% if is_granted("IS_AUTHENTICATED_REMEMBERED") and app.user.id == authorID and editable%}
        <div class="deletePlaylistButton" style="text-align: center; padding-top: 100px;">
            <button id="deleteButton" class="btn btn-danger glyphicon glyphicon-trash">Delete playlist</button>
        </div>
    {% endif %}
{% endblock %}